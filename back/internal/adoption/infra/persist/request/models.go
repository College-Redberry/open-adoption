// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package querier

import (
	"database/sql/driver"
	"fmt"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type PetGender string

const (
	PetGenderMale   PetGender = "male"
	PetGenderFemale PetGender = "female"
)

func (e *PetGender) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PetGender(s)
	case string:
		*e = PetGender(s)
	default:
		return fmt.Errorf("unsupported scan type for PetGender: %T", src)
	}
	return nil
}

type NullPetGender struct {
	PetGender PetGender
	Valid     bool // Valid is true if PetGender is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPetGender) Scan(value interface{}) error {
	if value == nil {
		ns.PetGender, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PetGender.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPetGender) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PetGender), nil
}

type PropertyType string

const (
	PropertyTypeHouse     PropertyType = "house"
	PropertyTypeApartment PropertyType = "apartment"
)

func (e *PropertyType) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = PropertyType(s)
	case string:
		*e = PropertyType(s)
	default:
		return fmt.Errorf("unsupported scan type for PropertyType: %T", src)
	}
	return nil
}

type NullPropertyType struct {
	PropertyType PropertyType
	Valid        bool // Valid is true if PropertyType is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullPropertyType) Scan(value interface{}) error {
	if value == nil {
		ns.PropertyType, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.PropertyType.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullPropertyType) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.PropertyType), nil
}

type AccountUser struct {
	ID        uuid.UUID
	FirstName string
	LastName  string
	Email     string
	Password  string
	CreatedAt pgtype.Timestamp
	UpdatedAt pgtype.Timestamp
}

type AdoptionRequest struct {
	ID                                uuid.UUID
	PetID                             uuid.UUID
	Name                              string
	Email                             string
	Phone                             string
	ApprovedAt                        pgtype.Timestamptz
	Age                               int32
	HouseHoldAgreed                   bool
	Alreadypets                       int32
	AlreadyPetsCastratedAndVaccinated bool
	Property                          PropertyType
	OwnProperty                       bool
	Address                           string
	Income                            int32
	SuitableLocation                  string
	AccessToTheStreet                 pgtype.Bool
	CreatedAt                         pgtype.Timestamptz
}

type PetsPet struct {
	ID        uuid.UUID
	Name      string
	Breed     string
	Age       string
	Gender    PetGender
	IsAdopted bool
}

type PetsPetImage struct {
	ID    uuid.UUID
	PetID pgtype.UUID
	Url   string
}
